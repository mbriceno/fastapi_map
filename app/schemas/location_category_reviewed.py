from pydantic import BaseModel, Field
from datetime import datetime
from typing import Union
from app.schemas.category import CategoryResponse
from app.schemas.location import LocationResponse
from app.schemas.user import UserResponse


class LocationCategoryReviewedBase(BaseModel):
    visit: int = Field(
        description="Number of visits made by "
        "a user to the same location-category"
    )
    last_visit: Union[datetime, None] = Field(
        description="Last visit date to the same location-category"
    )


class LocationCategoryReviewedRequest(LocationCategoryReviewedBase):
    category_id: int = Field(
        description="Relation with category, Category unique identifier"
    )
    location_id: int = Field(
        description="Relation with location, Location unique identifier"
    )


class LocationCategoryReviewedResponse(LocationCategoryReviewedBase):
    id: int = Field(description="Relation Unique identifier. Autogenerated")
    category: CategoryResponse = Field(
        description="Category relation, object to show Category fields"
    )
    location: LocationResponse = Field(
        description="Location relation, object to show Location fields"
    )
    user: UserResponse = Field(
        description="User relation, object to show User fields"
    )

    class Config:
        from_attributes = True
